name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Start test
#       run: |
#         git submodule init  
#         git submodule update --merge --recursive --remote
#         docker build -f Dockerfile.test -t app . 
#         docker-compose -f docker-compose.test.yaml run app 
  deploy:
#     needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Deploy
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      run: |
        git submodule init
        git submodule update --merge --recursive --remote 
        docker build -t app . 
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" 
        chmod +x ./kubectl && mkdir -p ~/.kube
        mv ./kubectl ~/.kube && export PATH=$PATH:$HOME/.kube
        ls ~/.kube
        touch ~/.kube/config
        echo $KUBE_CONFIG | base64 --decode > ~/.kube/config
        cat ~/.kube/config
        DEPLOYMENT=$(echo "Hello_CI_CD" | sed s/_/-/g | sed s/fast-//g)
        echo $DEPLOYMENT
        kubectl apply -f .kube/
        kubectl set image -n $NAMESPACE deployment/$DEPLOYMENT $DEPLOYMENT=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_IID
        rm -rf ~/.kube
